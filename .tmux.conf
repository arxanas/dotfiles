set -g default-shell /usr/local/bin/zsh
set -g default-command "reattach-to-user-namespace -l zsh"

# Change C-b to C-a.
set-option -g prefix C-a
bind a send-prefix

# Switch between windows with prefix-prefix.
bind C-a last-window

unbind -n C-h

# Swap this and the next windows with t and T.
bind t swap-window -t +1
bind T swap-window -t -1

# Number windows starting from 1
set -g base-index 1

# Don't wait for an escape sequence when pressing C-a
set -g escape-time 0

# Prevent pane-switching from capturing additional keystrokes
set -g repeat-time 0

setw -g aggressive-resize on

# Visual bell stuff, theoretically for irssi.
set -g visual-bell off
set -g visual-activity on
set -g bell-action current

# For some reason, the terminal doesn't recognize italics as reverse text or
# something like that. The consequence is that highlighting doesn't happen in
# pagers like `less`, which makes `man` a pain. To fix this, I had to rebuild
# my terminfo to make the `screen-it` (screen with italics) terminfo and use
# that.
#
# See http://tmux.svn.sourceforge.net/viewvc/tmux/trunk/FAQ, at the section
# "* vim displays reverse video instead of italics, while less displays italics
#    (or just regular text) instead of reverse. What's wrong?"
set -g default-terminal "screen-256color"
set -g status-bg colour52
set -g status-fg colour250
set -g status-left "#[fg=colour178]â”ˆ#(id -un) "
set -g status-right "#[fg=colour178][1m #(cashe read load-averages | cut -d' ' -f1)] [5m #(cashe read load-averages | cut -d' ' -f2)] [#(cashe read battery-text | cut -d',' -f3)%%] [%m-%d %H:%M]" # "#(date +\ %H:%M:%S)"
set -g status-interval 1
set-window-option -g window-status-format " #W "
set-window-option -g window-status-current-bg colour88
set-window-option -g window-status-current-fg colour178
set-window-option -g window-status-separator " "
set-window-option -g window-status-current-format " #W "

# Window switching
bind Space next-window
bind C-Space next-window

# Open new windows and panes in the current directory.
bind c new-window -c "#{pane_current_path}"
bind C-c new-window -c "#{pane_current_path}"
bind "\"" split-window -c "#{pane_current_path}"
bind "\%" split-window -h -c "#{pane_current_path}"

# Pane switching
# bind -n C-h select-pane -L
# bind -n C-j select-pane -D
# bind -n C-k select-pane -U
# bind -n C-l select-pane -R

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Pane resizing
bind -n S-Left resize-pane -L
bind -n S-Down resize-pane -D
bind -n S-Up resize-pane -U
bind -n S-Right resize-pane -R
